// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bootstrap/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Bootstrap {

  /// <summary>Holder for reflection information generated from bootstrap/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for bootstrap/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdib290c3RyYXAvc2VydmljZS5wcm90bxIJYm9vdHN0cmFwGhJzZXJ2aWNl",
            "L21ldGEucHJvdG8aFHNlcnZpY2UvdmVyaWZ5LnByb3RvGhVib290c3RyYXAv",
            "dHlwZXMucHJvdG8aLWdpdGh1Yi5jb20vZ29nby9wcm90b2J1Zi9nb2dvcHJv",
            "dG8vZ29nby5wcm90byKkAgoHUmVxdWVzdBImCgR0eXBlGAEgASgFQhji3h8E",
            "VHlwZcjeHwDa3h8ITm9kZVR5cGUSJwoEaW5mbxgCIAEoCzITLmJvb3RzdHJh",
            "cC5Ob2RlSW5mb0IEyN4fABInCgVzdGF0ZRgDIAEoDjIYLmJvb3RzdHJhcC5S",
            "ZXF1ZXN0LlN0YXRlEjIKBE1ldGEYYiABKAsyGi5zZXJ2aWNlLlJlcXVlc3RN",
            "ZXRhSGVhZGVyQgjQ3h8ByN4fABI8CgZWZXJpZnkYYyABKAsyIi5zZXJ2aWNl",
            "LlJlcXVlc3RWZXJpZmljYXRpb25IZWFkZXJCCNDeHwHI3h8AIi0KBVN0YXRl",
            "EgsKB1Vua25vd24QABIKCgZPbmxpbmUQARILCgdPZmZsaW5lEAIyQAoJQm9v",
            "dHN0cmFwEjMKB1Byb2Nlc3MSEi5ib290c3RyYXAuUmVxdWVzdBoULmJvb3Rz",
            "dHJhcC5TcHJlYWRNYXBCR1orZ2l0aHViLmNvbS9uc3BjYy1kZXYvbmVvZnMt",
            "YXBpLWdvL2Jvb3RzdHJhcKoCE05lb0ZTLkFQSS5Cb290c3RyYXDY4h4BYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.Service.MetaReflection.Descriptor, global::NeoFS.API.Service.VerifyReflection.Descriptor, global::NeoFS.API.Bootstrap.TypesReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Bootstrap.Request), global::NeoFS.API.Bootstrap.Request.Parser, new[]{ "Type", "Info", "State", "Meta", "Verify" }, null, new[]{ typeof(global::NeoFS.API.Bootstrap.Request.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Bootstrap.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      type_ = other.type_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      state_ = other.state_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private int type_;
    /// <summary>
    /// Type is NodeType, can be InnerRingNode (type=1) or StorageNode (type=2)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::NeoFS.API.Bootstrap.NodeInfo info_;
    /// <summary>
    /// Info contains information about node
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Bootstrap.NodeInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::NeoFS.API.Bootstrap.Request.Types.State state_ = global::NeoFS.API.Bootstrap.Request.Types.State.Unknown;
    /// <summary>
    /// State contains node status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Bootstrap.Request.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Info, other.Info)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (State != global::NeoFS.API.Bootstrap.Request.Types.State.Unknown) hash ^= State.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Type);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (State != global::NeoFS.API.Bootstrap.Request.Types.State.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (State != global::NeoFS.API.Bootstrap.Request.Types.State.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::NeoFS.API.Bootstrap.NodeInfo();
        }
        Info.MergeFrom(other.Info);
      }
      if (other.State != global::NeoFS.API.Bootstrap.Request.Types.State.Unknown) {
        State = other.State;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt32();
            break;
          }
          case 18: {
            if (info_ == null) {
              Info = new global::NeoFS.API.Bootstrap.NodeInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 24: {
            State = (global::NeoFS.API.Bootstrap.Request.Types.State) input.ReadEnum();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Node state
      /// </summary>
      public enum State {
        /// <summary>
        /// used by default
        /// </summary>
        [pbr::OriginalName("Unknown")] Unknown = 0,
        /// <summary>
        /// used to inform that node online
        /// </summary>
        [pbr::OriginalName("Online")] Online = 1,
        /// <summary>
        /// used to inform that node offline
        /// </summary>
        [pbr::OriginalName("Offline")] Offline = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
