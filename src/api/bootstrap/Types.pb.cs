// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bootstrap/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Bootstrap {

  /// <summary>Holder for reflection information generated from bootstrap/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for bootstrap/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVib290c3RyYXAvdHlwZXMucHJvdG8SCWJvb3RzdHJhcBotZ2l0aHViLmNv",
            "bS9nb2dvL3Byb3RvYnVmL2dvZ29wcm90by9nb2dvLnByb3RvIkUKCVNwcmVh",
            "ZE1hcBINCgVFcG9jaBgBIAEoBBIpCgZOZXRNYXAYAiADKAsyEy5ib290c3Ry",
            "YXAuTm9kZUluZm9CBMjeHwAipAEKCE5vZGVJbmZvEhwKB0FkZHJlc3MYASAB",
            "KAlCC+reHwdhZGRyZXNzEiQKBlB1YktleRgCIAEoDEIU6t4fEHB1YmtleSxv",
            "bWl0ZW1wdHkSJgoHT3B0aW9ucxgDIAMoCUIV6t4fEW9wdGlvbnMsb21pdGVt",
            "cHR5EiwKBlN0YXR1cxgEIAEoBEIc6t4fBnN0YXR1c8jeHwDa3h8KTm9kZVN0",
            "YXR1c0JPWitnaXRodWIuY29tL25zcGNjLWRldi9uZW9mcy1hcGktZ28vYm9v",
            "dHN0cmFwqgITTmVvRlMuQVBJLkJvb3RzdHJhcNjiHgGA4h4A2OEeAGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Bootstrap.SpreadMap), global::NeoFS.API.Bootstrap.SpreadMap.Parser, new[]{ "Epoch", "NetMap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Bootstrap.NodeInfo), global::NeoFS.API.Bootstrap.NodeInfo.Parser, new[]{ "Address", "PubKey", "Options", "Status" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SpreadMap : pb::IMessage<SpreadMap> {
    private static readonly pb::MessageParser<SpreadMap> _parser = new pb::MessageParser<SpreadMap>(() => new SpreadMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpreadMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Bootstrap.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpreadMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpreadMap(SpreadMap other) : this() {
      epoch_ = other.epoch_;
      netMap_ = other.netMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpreadMap Clone() {
      return new SpreadMap(this);
    }

    /// <summary>Field number for the "Epoch" field.</summary>
    public const int EpochFieldNumber = 1;
    private ulong epoch_;
    /// <summary>
    /// Epoch is current epoch for netmap
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "NetMap" field.</summary>
    public const int NetMapFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NeoFS.API.Bootstrap.NodeInfo> _repeated_netMap_codec
        = pb::FieldCodec.ForMessage(18, global::NeoFS.API.Bootstrap.NodeInfo.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Bootstrap.NodeInfo> netMap_ = new pbc::RepeatedField<global::NeoFS.API.Bootstrap.NodeInfo>();
    /// <summary>
    /// NetMap is a set of NodeInfos
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Bootstrap.NodeInfo> NetMap {
      get { return netMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpreadMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpreadMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Epoch != other.Epoch) return false;
      if(!netMap_.Equals(other.netMap_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Epoch != 0UL) hash ^= Epoch.GetHashCode();
      hash ^= netMap_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Epoch != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Epoch);
      }
      netMap_.WriteTo(output, _repeated_netMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Epoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Epoch);
      }
      size += netMap_.CalculateSize(_repeated_netMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpreadMap other) {
      if (other == null) {
        return;
      }
      if (other.Epoch != 0UL) {
        Epoch = other.Epoch;
      }
      netMap_.Add(other.netMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Epoch = input.ReadUInt64();
            break;
          }
          case 18: {
            netMap_.AddEntriesFrom(input, _repeated_netMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NodeInfo : pb::IMessage<NodeInfo> {
    private static readonly pb::MessageParser<NodeInfo> _parser = new pb::MessageParser<NodeInfo>(() => new NodeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Bootstrap.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo(NodeInfo other) : this() {
      address_ = other.address_;
      pubKey_ = other.pubKey_;
      options_ = other.options_.Clone();
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeInfo Clone() {
      return new NodeInfo(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// Address is a node [multi-address](https://github.com/multiformats/multiaddr)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PubKey" field.</summary>
    public const int PubKeyFieldNumber = 2;
    private pb::ByteString pubKey_ = pb::ByteString.Empty;
    /// <summary>
    /// PubKey is a compressed public key representation in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubKey {
      get { return pubKey_; }
      set {
        pubKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Options" field.</summary>
    public const int OptionsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_options_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> options_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Options is set of node optional information, such as storage capacity, node location, price and etc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Options {
      get { return options_; }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 4;
    private ulong status_;
    /// <summary>
    /// Status is bitmap status of the node
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (PubKey != other.PubKey) return false;
      if(!options_.Equals(other.options_)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PubKey.Length != 0) hash ^= PubKey.GetHashCode();
      hash ^= options_.GetHashCode();
      if (Status != 0UL) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (PubKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubKey);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (Status != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PubKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubKey);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (Status != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PubKey.Length != 0) {
        PubKey = other.PubKey;
      }
      options_.Add(other.options_);
      if (other.Status != 0UL) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            PubKey = input.ReadBytes();
            break;
          }
          case 26: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 32: {
            Status = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
