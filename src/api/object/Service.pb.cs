// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Object {

  /// <summary>Holder for reflection information generated from object/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for object/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRvYmplY3Qvc2VydmljZS5wcm90bxIGb2JqZWN0GhByZWZzL3R5cGVzLnBy",
            "b3RvGhJvYmplY3QvdHlwZXMucHJvdG8aE3Nlc3Npb24vdHlwZXMucHJvdG8a",
            "EnNlcnZpY2UvbWV0YS5wcm90bxoUc2VydmljZS92ZXJpZnkucHJvdG8aLWdp",
            "dGh1Yi5jb20vZ29nby9wcm90b2J1Zi9nb2dvcHJvdG8vZ29nby5wcm90byKx",
            "AQoKR2V0UmVxdWVzdBIkCgdBZGRyZXNzGAEgASgLMg0ucmVmcy5BZGRyZXNz",
            "QgTI3h8AEgsKA1JhdxgCIAEoCBIyCgRNZXRhGGIgASgLMhouc2VydmljZS5S",
            "ZXF1ZXN0TWV0YUhlYWRlckII0N4fAcjeHwASPAoGVmVyaWZ5GGMgASgLMiIu",
            "c2VydmljZS5SZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyQgjQ3h8ByN4fACJ6",
            "CgtHZXRSZXNwb25zZRIgCgZvYmplY3QYASABKAsyDi5vYmplY3QuT2JqZWN0",
            "SAASDwoFQ2h1bmsYAiABKAxIABIzCgRNZXRhGGMgASgLMhsuc2VydmljZS5S",
            "ZXNwb25zZU1ldGFIZWFkZXJCCNDeHwHI3h8AQgMKAVIikAIKClB1dFJlcXVl",
            "c3QSLgoGSGVhZGVyGAEgASgLMhwub2JqZWN0LlB1dFJlcXVlc3QuUHV0SGVh",
            "ZGVySAASDwoFQ2h1bmsYAiABKAxIABIyCgRNZXRhGGIgASgLMhouc2Vydmlj",
            "ZS5SZXF1ZXN0TWV0YUhlYWRlckII0N4fAcjeHwASPAoGVmVyaWZ5GGMgASgL",
            "MiIuc2VydmljZS5SZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyQgjQ3h8ByN4f",
            "ABpKCglQdXRIZWFkZXISHgoGT2JqZWN0GAEgASgLMg4ub2JqZWN0Lk9iamVj",
            "dBIdCgVUb2tlbhgCIAEoCzIOLnNlc3Npb24uVG9rZW5CAwoBUiJoCgtQdXRS",
            "ZXNwb25zZRIkCgdBZGRyZXNzGAEgASgLMg0ucmVmcy5BZGRyZXNzQgTI3h8A",
            "EjMKBE1ldGEYYyABKAsyGy5zZXJ2aWNlLlJlc3BvbnNlTWV0YUhlYWRlckII",
            "0N4fAcjeHwAi6AEKDURlbGV0ZVJlcXVlc3QSJAoHQWRkcmVzcxgBIAEoCzIN",
            "LnJlZnMuQWRkcmVzc0IEyN4fABIgCgdPd25lcklEGAIgASgMQg/I3h8A2t4f",
            "B093bmVySUQSHQoFVG9rZW4YAyABKAsyDi5zZXNzaW9uLlRva2VuEjIKBE1l",
            "dGEYYiABKAsyGi5zZXJ2aWNlLlJlcXVlc3RNZXRhSGVhZGVyQgjQ3h8ByN4f",
            "ABI8CgZWZXJpZnkYYyABKAsyIi5zZXJ2aWNlLlJlcXVlc3RWZXJpZmljYXRp",
            "b25IZWFkZXJCCNDeHwHI3h8AIkUKDkRlbGV0ZVJlc3BvbnNlEjMKBE1ldGEY",
            "YyABKAsyGy5zZXJ2aWNlLlJlc3BvbnNlTWV0YUhlYWRlckII0N4fAcjeHwAi",
            "0gEKC0hlYWRSZXF1ZXN0Ei8KB0FkZHJlc3MYASABKAsyDS5yZWZzLkFkZHJl",
            "c3NCD8jeHwDa3h8HQWRkcmVzcxITCgtGdWxsSGVhZGVycxgCIAEoCBILCgNS",
            "YXcYAyABKAgSMgoETWV0YRhiIAEoCzIaLnNlcnZpY2UuUmVxdWVzdE1ldGFI",
            "ZWFkZXJCCNDeHwHI3h8AEjwKBlZlcmlmeRhjIAEoCzIiLnNlcnZpY2UuUmVx",
            "dWVzdFZlcmlmaWNhdGlvbkhlYWRlckII0N4fAcjeHwAiYwoMSGVhZFJlc3Bv",
            "bnNlEh4KBk9iamVjdBgBIAEoCzIOLm9iamVjdC5PYmplY3QSMwoETWV0YRhj",
            "IAEoCzIbLnNlcnZpY2UuUmVzcG9uc2VNZXRhSGVhZGVyQgjQ3h8ByN4fACLI",
            "AQoNU2VhcmNoUmVxdWVzdBIgCgtDb250YWluZXJJRBgBIAEoDEILyN4fANre",
            "HwNDSUQSDQoFUXVlcnkYAiABKAwSFAoMUXVlcnlWZXJzaW9uGAMgASgNEjIK",
            "BE1ldGEYYiABKAsyGi5zZXJ2aWNlLlJlcXVlc3RNZXRhSGVhZGVyQgjQ3h8B",
            "yN4fABI8CgZWZXJpZnkYYyABKAsyIi5zZXJ2aWNlLlJlcXVlc3RWZXJpZmlj",
            "YXRpb25IZWFkZXJCCNDeHwHI3h8AIm0KDlNlYXJjaFJlc3BvbnNlEiYKCUFk",
            "ZHJlc3NlcxgBIAMoCzINLnJlZnMuQWRkcmVzc0IEyN4fABIzCgRNZXRhGGMg",
            "ASgLMhsuc2VydmljZS5SZXNwb25zZU1ldGFIZWFkZXJCCNDeHwHI3h8AIs0B",
            "Cg9HZXRSYW5nZVJlcXVlc3QSJAoHQWRkcmVzcxgBIAEoCzINLnJlZnMuQWRk",
            "cmVzc0IEyN4fABIiCgVSYW5nZRgCIAEoCzINLm9iamVjdC5SYW5nZUIEyN4f",
            "ABIyCgRNZXRhGGIgASgLMhouc2VydmljZS5SZXF1ZXN0TWV0YUhlYWRlckII",
            "0N4fAcjeHwASPAoGVmVyaWZ5GGMgASgLMiIuc2VydmljZS5SZXF1ZXN0VmVy",
            "aWZpY2F0aW9uSGVhZGVyQgjQ3h8ByN4fACJZChBHZXRSYW5nZVJlc3BvbnNl",
            "EhAKCEZyYWdtZW50GAEgASgMEjMKBE1ldGEYYyABKAsyGy5zZXJ2aWNlLlJl",
            "c3BvbnNlTWV0YUhlYWRlckII0N4fAcjeHwAi4AEKE0dldFJhbmdlSGFzaFJl",
            "cXVlc3QSJAoHQWRkcmVzcxgBIAEoCzINLnJlZnMuQWRkcmVzc0IEyN4fABIj",
            "CgZSYW5nZXMYAiADKAsyDS5vYmplY3QuUmFuZ2VCBMjeHwASDAoEU2FsdBgD",
            "IAEoDBIyCgRNZXRhGGIgASgLMhouc2VydmljZS5SZXF1ZXN0TWV0YUhlYWRl",
            "ckII0N4fAcjeHwASPAoGVmVyaWZ5GGMgASgLMiIuc2VydmljZS5SZXF1ZXN0",
            "VmVyaWZpY2F0aW9uSGVhZGVyQgjQ3h8ByN4fACJpChRHZXRSYW5nZUhhc2hS",
            "ZXNwb25zZRIcCgZIYXNoZXMYASADKAxCDNreHwRIYXNoyN4fABIzCgRNZXRh",
            "GGMgASgLMhsuc2VydmljZS5SZXNwb25zZU1ldGFIZWFkZXJCCNDeHwHI3h8A",
            "MqADCgdTZXJ2aWNlEjAKA0dldBISLm9iamVjdC5HZXRSZXF1ZXN0GhMub2Jq",
            "ZWN0LkdldFJlc3BvbnNlMAESMAoDUHV0EhIub2JqZWN0LlB1dFJlcXVlc3Qa",
            "Ey5vYmplY3QuUHV0UmVzcG9uc2UoARI3CgZEZWxldGUSFS5vYmplY3QuRGVs",
            "ZXRlUmVxdWVzdBoWLm9iamVjdC5EZWxldGVSZXNwb25zZRIxCgRIZWFkEhMu",
            "b2JqZWN0LkhlYWRSZXF1ZXN0GhQub2JqZWN0LkhlYWRSZXNwb25zZRI5CgZT",
            "ZWFyY2gSFS5vYmplY3QuU2VhcmNoUmVxdWVzdBoWLm9iamVjdC5TZWFyY2hS",
            "ZXNwb25zZTABEj8KCEdldFJhbmdlEhcub2JqZWN0LkdldFJhbmdlUmVxdWVz",
            "dBoYLm9iamVjdC5HZXRSYW5nZVJlc3BvbnNlMAESSQoMR2V0UmFuZ2VIYXNo",
            "Ehsub2JqZWN0LkdldFJhbmdlSGFzaFJlcXVlc3QaHC5vYmplY3QuR2V0UmFu",
            "Z2VIYXNoUmVzcG9uc2VCPlolZ2l0aHViLmNvbS9uc3BjYy1kZXYvbmVvZnMt",
            "YXBpL29iamVjdKoCEE5lb0ZTLkFQSS5PYmplY3TY4h4BYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.Refs.TypesReflection.Descriptor, global::NeoFS.API.Object.TypesReflection.Descriptor, global::NeoFS.API.Session.TypesReflection.Descriptor, global::NeoFS.API.Service.MetaReflection.Descriptor, global::NeoFS.API.Service.VerifyReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetRequest), global::NeoFS.API.Object.GetRequest.Parser, new[]{ "Address", "Raw", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetResponse), global::NeoFS.API.Object.GetResponse.Parser, new[]{ "Object", "Chunk", "Meta" }, new[]{ "R" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.PutRequest), global::NeoFS.API.Object.PutRequest.Parser, new[]{ "Header", "Chunk", "Meta", "Verify" }, new[]{ "R" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.PutRequest.Types.PutHeader), global::NeoFS.API.Object.PutRequest.Types.PutHeader.Parser, new[]{ "Object", "Token" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.PutResponse), global::NeoFS.API.Object.PutResponse.Parser, new[]{ "Address", "Meta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.DeleteRequest), global::NeoFS.API.Object.DeleteRequest.Parser, new[]{ "Address", "OwnerID", "Token", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.DeleteResponse), global::NeoFS.API.Object.DeleteResponse.Parser, new[]{ "Meta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.HeadRequest), global::NeoFS.API.Object.HeadRequest.Parser, new[]{ "Address", "FullHeaders", "Raw", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.HeadResponse), global::NeoFS.API.Object.HeadResponse.Parser, new[]{ "Object", "Meta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.SearchRequest), global::NeoFS.API.Object.SearchRequest.Parser, new[]{ "ContainerID", "Query", "QueryVersion", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.SearchResponse), global::NeoFS.API.Object.SearchResponse.Parser, new[]{ "Addresses", "Meta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetRangeRequest), global::NeoFS.API.Object.GetRangeRequest.Parser, new[]{ "Address", "Range", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetRangeResponse), global::NeoFS.API.Object.GetRangeResponse.Parser, new[]{ "Fragment", "Meta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetRangeHashRequest), global::NeoFS.API.Object.GetRangeHashRequest.Parser, new[]{ "Address", "Ranges", "Salt", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.GetRangeHashResponse), global::NeoFS.API.Object.GetRangeHashResponse.Parser, new[]{ "Hashes", "Meta" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetRequest : pb::IMessage<GetRequest> {
    private static readonly pb::MessageParser<GetRequest> _parser = new pb::MessageParser<GetRequest>(() => new GetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest(GetRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      raw_ = other.raw_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest Clone() {
      return new GetRequest(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Raw" field.</summary>
    public const int RawFieldNumber = 2;
    private bool raw_;
    /// <summary>
    /// Raw is the request flag of a physically stored representation of an object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Raw {
      get { return raw_; }
      set {
        raw_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (Raw != other.Raw) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (Raw != false) hash ^= Raw.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (Raw != false) {
        output.WriteRawTag(16);
        output.WriteBool(Raw);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (Raw != false) {
        size += 1 + 1;
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.Raw != false) {
        Raw = other.Raw;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            Raw = input.ReadBool();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetResponse : pb::IMessage<GetResponse> {
    private static readonly pb::MessageParser<GetResponse> _parser = new pb::MessageParser<GetResponse>(() => new GetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse(GetResponse other) : this() {
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      switch (other.RCase) {
        case ROneofCase.Object:
          Object = other.Object.Clone();
          break;
        case ROneofCase.Chunk:
          Chunk = other.Chunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse Clone() {
      return new GetResponse(this);
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 1;
    /// <summary>
    /// Object header and some payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Object Object {
      get { return rCase_ == ROneofCase.Object ? (global::NeoFS.API.Object.Object) r_ : null; }
      set {
        r_ = value;
        rCase_ = value == null ? ROneofCase.None : ROneofCase.Object;
      }
    }

    /// <summary>Field number for the "Chunk" field.</summary>
    public const int ChunkFieldNumber = 2;
    /// <summary>
    /// Chunk of remaining payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Chunk {
      get { return rCase_ == ROneofCase.Chunk ? (pb::ByteString) r_ : pb::ByteString.Empty; }
      set {
        r_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        rCase_ = ROneofCase.Chunk;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    private object r_;
    /// <summary>Enum of possible cases for the "R" oneof.</summary>
    public enum ROneofCase {
      None = 0,
      Object = 1,
      Chunk = 2,
    }
    private ROneofCase rCase_ = ROneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ROneofCase RCase {
      get { return rCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearR() {
      rCase_ = ROneofCase.None;
      r_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      if (Chunk != other.Chunk) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (RCase != other.RCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rCase_ == ROneofCase.Object) hash ^= Object.GetHashCode();
      if (rCase_ == ROneofCase.Chunk) hash ^= Chunk.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      hash ^= (int) rCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rCase_ == ROneofCase.Object) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      if (rCase_ == ROneofCase.Chunk) {
        output.WriteRawTag(18);
        output.WriteBytes(Chunk);
      }
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rCase_ == ROneofCase.Object) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      if (rCase_ == ROneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Chunk);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResponse other) {
      if (other == null) {
        return;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      switch (other.RCase) {
        case ROneofCase.Object:
          if (Object == null) {
            Object = new global::NeoFS.API.Object.Object();
          }
          Object.MergeFrom(other.Object);
          break;
        case ROneofCase.Chunk:
          Chunk = other.Chunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::NeoFS.API.Object.Object subBuilder = new global::NeoFS.API.Object.Object();
            if (rCase_ == ROneofCase.Object) {
              subBuilder.MergeFrom(Object);
            }
            input.ReadMessage(subBuilder);
            Object = subBuilder;
            break;
          }
          case 18: {
            Chunk = input.ReadBytes();
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutRequest : pb::IMessage<PutRequest> {
    private static readonly pb::MessageParser<PutRequest> _parser = new pb::MessageParser<PutRequest>(() => new PutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest(PutRequest other) : this() {
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      switch (other.RCase) {
        case ROneofCase.Header:
          Header = other.Header.Clone();
          break;
        case ROneofCase.Chunk:
          Chunk = other.Chunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest Clone() {
      return new PutRequest(this);
    }

    /// <summary>Field number for the "Header" field.</summary>
    public const int HeaderFieldNumber = 1;
    /// <summary>
    /// Header should be the first message in the stream
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.PutRequest.Types.PutHeader Header {
      get { return rCase_ == ROneofCase.Header ? (global::NeoFS.API.Object.PutRequest.Types.PutHeader) r_ : null; }
      set {
        r_ = value;
        rCase_ = value == null ? ROneofCase.None : ROneofCase.Header;
      }
    }

    /// <summary>Field number for the "Chunk" field.</summary>
    public const int ChunkFieldNumber = 2;
    /// <summary>
    /// Chunk should be a remaining message in stream should be chunks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Chunk {
      get { return rCase_ == ROneofCase.Chunk ? (pb::ByteString) r_ : pb::ByteString.Empty; }
      set {
        r_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        rCase_ = ROneofCase.Chunk;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    private object r_;
    /// <summary>Enum of possible cases for the "R" oneof.</summary>
    public enum ROneofCase {
      None = 0,
      Header = 1,
      Chunk = 2,
    }
    private ROneofCase rCase_ = ROneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ROneofCase RCase {
      get { return rCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearR() {
      rCase_ = ROneofCase.None;
      r_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Chunk != other.Chunk) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      if (RCase != other.RCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rCase_ == ROneofCase.Header) hash ^= Header.GetHashCode();
      if (rCase_ == ROneofCase.Chunk) hash ^= Chunk.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      hash ^= (int) rCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rCase_ == ROneofCase.Header) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (rCase_ == ROneofCase.Chunk) {
        output.WriteRawTag(18);
        output.WriteBytes(Chunk);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rCase_ == ROneofCase.Header) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (rCase_ == ROneofCase.Chunk) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Chunk);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRequest other) {
      if (other == null) {
        return;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      switch (other.RCase) {
        case ROneofCase.Header:
          if (Header == null) {
            Header = new global::NeoFS.API.Object.PutRequest.Types.PutHeader();
          }
          Header.MergeFrom(other.Header);
          break;
        case ROneofCase.Chunk:
          Chunk = other.Chunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::NeoFS.API.Object.PutRequest.Types.PutHeader subBuilder = new global::NeoFS.API.Object.PutRequest.Types.PutHeader();
            if (rCase_ == ROneofCase.Header) {
              subBuilder.MergeFrom(Header);
            }
            input.ReadMessage(subBuilder);
            Header = subBuilder;
            break;
          }
          case 18: {
            Chunk = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PutRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class PutHeader : pb::IMessage<PutHeader> {
        private static readonly pb::MessageParser<PutHeader> _parser = new pb::MessageParser<PutHeader>(() => new PutHeader());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PutHeader> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::NeoFS.API.Object.PutRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutHeader() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutHeader(PutHeader other) : this() {
          object_ = other.object_ != null ? other.object_.Clone() : null;
          token_ = other.token_ != null ? other.token_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PutHeader Clone() {
          return new PutHeader(this);
        }

        /// <summary>Field number for the "Object" field.</summary>
        public const int ObjectFieldNumber = 1;
        private global::NeoFS.API.Object.Object object_;
        /// <summary>
        /// Object with at least container id and owner id fields
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.Object.Object Object {
          get { return object_; }
          set {
            object_ = value;
          }
        }

        /// <summary>Field number for the "Token" field.</summary>
        public const int TokenFieldNumber = 2;
        private global::NeoFS.API.Session.Token token_;
        /// <summary>
        /// Token with session public key and user's signature
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::NeoFS.API.Session.Token Token {
          get { return token_; }
          set {
            token_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PutHeader);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PutHeader other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Object, other.Object)) return false;
          if (!object.Equals(Token, other.Token)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (object_ != null) hash ^= Object.GetHashCode();
          if (token_ != null) hash ^= Token.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (object_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Object);
          }
          if (token_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Token);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (object_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
          }
          if (token_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PutHeader other) {
          if (other == null) {
            return;
          }
          if (other.object_ != null) {
            if (object_ == null) {
              Object = new global::NeoFS.API.Object.Object();
            }
            Object.MergeFrom(other.Object);
          }
          if (other.token_ != null) {
            if (token_ == null) {
              Token = new global::NeoFS.API.Session.Token();
            }
            Token.MergeFrom(other.Token);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (object_ == null) {
                  Object = new global::NeoFS.API.Object.Object();
                }
                input.ReadMessage(Object);
                break;
              }
              case 18: {
                if (token_ == null) {
                  Token = new global::NeoFS.API.Session.Token();
                }
                input.ReadMessage(Token);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class PutResponse : pb::IMessage<PutResponse> {
    private static readonly pb::MessageParser<PutResponse> _parser = new pb::MessageParser<PutResponse>(() => new PutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse(PutResponse other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse Clone() {
      return new PutResponse(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutResponse other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      ownerID_ = other.ownerID_;
      token_ = other.token_ != null ? other.token_.Clone() : null;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 2;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private global::NeoFS.API.Session.Token token_;
    /// <summary>
    /// Token with session public key and user's signature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Session.Token Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Token, other.Token)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (token_ != null) hash ^= Token.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerID);
      }
      if (token_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Token);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.token_ != null) {
        if (token_ == null) {
          Token = new global::NeoFS.API.Session.Token();
        }
        Token.MergeFrom(other.Token);
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 26: {
            if (token_ == null) {
              Token = new global::NeoFS.API.Session.Token();
            }
            input.ReadMessage(Token);
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteResponse is empty because we cannot guarantee permanent object removal
  /// in distributed system.
  /// </summary>
  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeadRequest : pb::IMessage<HeadRequest> {
    private static readonly pb::MessageParser<HeadRequest> _parser = new pb::MessageParser<HeadRequest>(() => new HeadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadRequest(HeadRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      fullHeaders_ = other.fullHeaders_;
      raw_ = other.raw_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadRequest Clone() {
      return new HeadRequest(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "FullHeaders" field.</summary>
    public const int FullHeadersFieldNumber = 2;
    private bool fullHeaders_;
    /// <summary>
    /// FullHeaders can be set true for extended headers in the object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullHeaders {
      get { return fullHeaders_; }
      set {
        fullHeaders_ = value;
      }
    }

    /// <summary>Field number for the "Raw" field.</summary>
    public const int RawFieldNumber = 3;
    private bool raw_;
    /// <summary>
    /// Raw is the request flag of a physically stored representation of an object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Raw {
      get { return raw_; }
      set {
        raw_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (FullHeaders != other.FullHeaders) return false;
      if (Raw != other.Raw) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (FullHeaders != false) hash ^= FullHeaders.GetHashCode();
      if (Raw != false) hash ^= Raw.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (FullHeaders != false) {
        output.WriteRawTag(16);
        output.WriteBool(FullHeaders);
      }
      if (Raw != false) {
        output.WriteRawTag(24);
        output.WriteBool(Raw);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (FullHeaders != false) {
        size += 1 + 1;
      }
      if (Raw != false) {
        size += 1 + 1;
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeadRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.FullHeaders != false) {
        FullHeaders = other.FullHeaders;
      }
      if (other.Raw != false) {
        Raw = other.Raw;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 16: {
            FullHeaders = input.ReadBool();
            break;
          }
          case 24: {
            Raw = input.ReadBool();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HeadResponse : pb::IMessage<HeadResponse> {
    private static readonly pb::MessageParser<HeadResponse> _parser = new pb::MessageParser<HeadResponse>(() => new HeadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HeadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadResponse(HeadResponse other) : this() {
      object_ = other.object_ != null ? other.object_.Clone() : null;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HeadResponse Clone() {
      return new HeadResponse(this);
    }

    /// <summary>Field number for the "Object" field.</summary>
    public const int ObjectFieldNumber = 1;
    private global::NeoFS.API.Object.Object object_;
    /// <summary>
    /// Object without payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Object Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HeadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HeadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Object, other.Object)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (object_ != null) hash ^= Object.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (object_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Object);
      }
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HeadResponse other) {
      if (other == null) {
        return;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          Object = new global::NeoFS.API.Object.Object();
        }
        Object.MergeFrom(other.Object);
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (object_ == null) {
              Object = new global::NeoFS.API.Object.Object();
            }
            input.ReadMessage(Object);
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchRequest : pb::IMessage<SearchRequest> {
    private static readonly pb::MessageParser<SearchRequest> _parser = new pb::MessageParser<SearchRequest>(() => new SearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest(SearchRequest other) : this() {
      containerID_ = other.containerID_;
      query_ = other.query_;
      queryVersion_ = other.queryVersion_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest Clone() {
      return new SearchRequest(this);
    }

    /// <summary>Field number for the "ContainerID" field.</summary>
    public const int ContainerIDFieldNumber = 1;
    private pb::ByteString containerID_ = pb::ByteString.Empty;
    /// <summary>
    /// ContainerID for searching the object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContainerID {
      get { return containerID_; }
      set {
        containerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Query" field.</summary>
    public const int QueryFieldNumber = 2;
    private pb::ByteString query_ = pb::ByteString.Empty;
    /// <summary>
    /// Query in the binary serialized format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "QueryVersion" field.</summary>
    public const int QueryVersionFieldNumber = 3;
    private uint queryVersion_;
    /// <summary>
    /// QueryVersion is a version of search query format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QueryVersion {
      get { return queryVersion_; }
      set {
        queryVersion_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerID != other.ContainerID) return false;
      if (Query != other.Query) return false;
      if (QueryVersion != other.QueryVersion) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerID.Length != 0) hash ^= ContainerID.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (QueryVersion != 0) hash ^= QueryVersion.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContainerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ContainerID);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Query);
      }
      if (QueryVersion != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(QueryVersion);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContainerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContainerID);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Query);
      }
      if (QueryVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QueryVersion);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContainerID.Length != 0) {
        ContainerID = other.ContainerID;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.QueryVersion != 0) {
        QueryVersion = other.QueryVersion;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContainerID = input.ReadBytes();
            break;
          }
          case 18: {
            Query = input.ReadBytes();
            break;
          }
          case 24: {
            QueryVersion = input.ReadUInt32();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchResponse : pb::IMessage<SearchResponse> {
    private static readonly pb::MessageParser<SearchResponse> _parser = new pb::MessageParser<SearchResponse>(() => new SearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse(SearchResponse other) : this() {
      addresses_ = other.addresses_.Clone();
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchResponse Clone() {
      return new SearchResponse(this);
    }

    /// <summary>Field number for the "Addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NeoFS.API.Refs.Address> _repeated_addresses_codec
        = pb::FieldCodec.ForMessage(10, global::NeoFS.API.Refs.Address.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Refs.Address> addresses_ = new pbc::RepeatedField<global::NeoFS.API.Refs.Address>();
    /// <summary>
    /// Addresses of found objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Refs.Address> Addresses {
      get { return addresses_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      addresses_.WriteTo(output, _repeated_addresses_codec);
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchResponse other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeRequest : pb::IMessage<GetRangeRequest> {
    private static readonly pb::MessageParser<GetRangeRequest> _parser = new pb::MessageParser<GetRangeRequest>(() => new GetRangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest(GetRangeRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      range_ = other.range_ != null ? other.range_.Clone() : null;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeRequest Clone() {
      return new GetRangeRequest(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Range" field.</summary>
    public const int RangeFieldNumber = 2;
    private global::NeoFS.API.Object.Range range_;
    /// <summary>
    /// Range of object's payload to return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Range Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (range_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Range);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::NeoFS.API.Object.Range();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            if (range_ == null) {
              Range = new global::NeoFS.API.Object.Range();
            }
            input.ReadMessage(Range);
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeResponse : pb::IMessage<GetRangeResponse> {
    private static readonly pb::MessageParser<GetRangeResponse> _parser = new pb::MessageParser<GetRangeResponse>(() => new GetRangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse(GetRangeResponse other) : this() {
      fragment_ = other.fragment_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeResponse Clone() {
      return new GetRangeResponse(this);
    }

    /// <summary>Field number for the "Fragment" field.</summary>
    public const int FragmentFieldNumber = 1;
    private pb::ByteString fragment_ = pb::ByteString.Empty;
    /// <summary>
    /// Fragment of object's payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Fragment {
      get { return fragment_; }
      set {
        fragment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Fragment != other.Fragment) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Fragment.Length != 0) hash ^= Fragment.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Fragment.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Fragment);
      }
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Fragment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Fragment);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Fragment.Length != 0) {
        Fragment = other.Fragment;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Fragment = input.ReadBytes();
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeHashRequest : pb::IMessage<GetRangeHashRequest> {
    private static readonly pb::MessageParser<GetRangeHashRequest> _parser = new pb::MessageParser<GetRangeHashRequest>(() => new GetRangeHashRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeHashRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashRequest(GetRangeHashRequest other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      ranges_ = other.ranges_.Clone();
      salt_ = other.salt_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashRequest Clone() {
      return new GetRangeHashRequest(this);
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::NeoFS.API.Refs.Address address_;
    /// <summary>
    /// Address of object (container id + object id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "Ranges" field.</summary>
    public const int RangesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NeoFS.API.Object.Range> _repeated_ranges_codec
        = pb::FieldCodec.ForMessage(18, global::NeoFS.API.Object.Range.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Object.Range> ranges_ = new pbc::RepeatedField<global::NeoFS.API.Object.Range>();
    /// <summary>
    /// Ranges of object's payload to calculate homomorphic hash
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Object.Range> Ranges {
      get { return ranges_; }
    }

    /// <summary>Field number for the "Salt" field.</summary>
    public const int SaltFieldNumber = 3;
    private pb::ByteString salt_ = pb::ByteString.Empty;
    /// <summary>
    /// Salt is used to XOR object's payload ranges before hashing, it can be nil
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Salt {
      get { return salt_; }
      set {
        salt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeHashRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeHashRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      if(!ranges_.Equals(other.ranges_)) return false;
      if (Salt != other.Salt) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      hash ^= ranges_.GetHashCode();
      if (Salt.Length != 0) hash ^= Salt.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      ranges_.WriteTo(output, _repeated_ranges_codec);
      if (Salt.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Salt);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      size += ranges_.CalculateSize(_repeated_ranges_codec);
      if (Salt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Salt);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeHashRequest other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::NeoFS.API.Refs.Address();
        }
        Address.MergeFrom(other.Address);
      }
      ranges_.Add(other.ranges_);
      if (other.Salt.Length != 0) {
        Salt = other.Salt;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::NeoFS.API.Refs.Address();
            }
            input.ReadMessage(Address);
            break;
          }
          case 18: {
            ranges_.AddEntriesFrom(input, _repeated_ranges_codec);
            break;
          }
          case 26: {
            Salt = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRangeHashResponse : pb::IMessage<GetRangeHashResponse> {
    private static readonly pb::MessageParser<GetRangeHashResponse> _parser = new pb::MessageParser<GetRangeHashResponse>(() => new GetRangeHashResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRangeHashResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.ServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashResponse(GetRangeHashResponse other) : this() {
      hashes_ = other.hashes_.Clone();
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRangeHashResponse Clone() {
      return new GetRangeHashResponse(this);
    }

    /// <summary>Field number for the "Hashes" field.</summary>
    public const int HashesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_hashes_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> hashes_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Hashes is a homomorphic hashes of all ranges
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Hashes {
      get { return hashes_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 99;
    private global::NeoFS.API.Service.ResponseMetaHeader meta_;
    /// <summary>
    /// ResponseMetaHeader contains meta information based on request processing by server (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.ResponseMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRangeHashResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRangeHashResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hashes_.Equals(other.hashes_)) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hashes_.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (meta_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Meta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRangeHashResponse other) {
      if (other == null) {
        return;
      }
      hashes_.Add(other.hashes_);
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
          case 794: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.ResponseMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
