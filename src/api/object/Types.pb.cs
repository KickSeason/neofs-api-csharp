// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: object/types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Object {

  /// <summary>Holder for reflection information generated from object/types.proto</summary>
  public static partial class TypesReflection {

    #region Descriptor
    /// <summary>File descriptor for object/types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJvYmplY3QvdHlwZXMucHJvdG8SBm9iamVjdBoQcmVmcy90eXBlcy5wcm90",
            "bxoTc2Vzc2lvbi90eXBlcy5wcm90bxoYc3RvcmFnZWdyb3VwL3R5cGVzLnBy",
            "b3RvGi1naXRodWIuY29tL2dvZ28vcHJvdG9idWYvZ29nb3Byb3RvL2dvZ28u",
            "cHJvdG8iJwoFUmFuZ2USDgoGT2Zmc2V0GAEgASgEEg4KBkxlbmd0aBgCIAEo",
            "BCIoCgpVc2VySGVhZGVyEgsKA0tleRgBIAEoCRINCgVWYWx1ZRgCIAEoCSK+",
            "AwoGSGVhZGVyEhwKBExpbmsYASABKAsyDC5vYmplY3QuTGlua0gAEiEKCFJl",
            "ZGlyZWN0GAIgASgLMg0ucmVmcy5BZGRyZXNzSAASKAoKVXNlckhlYWRlchgD",
            "IAEoCzISLm9iamVjdC5Vc2VySGVhZGVySAASJgoJVHJhbnNmb3JtGAQgASgL",
            "MhEub2JqZWN0LlRyYW5zZm9ybUgAEiYKCVRvbWJzdG9uZRgFIAEoCzIRLm9i",
            "amVjdC5Ub21ic3RvbmVIABItCgZWZXJpZnkYBiABKAsyGy5zZXNzaW9uLlZl",
            "cmlmaWNhdGlvbkhlYWRlckgAEhwKCEhvbW9IYXNoGAcgASgMQgja3h8ESGFz",
            "aEgAEhkKD1BheWxvYWRDaGVja3N1bRgIIAEoDEgAEiwKCUludGVncml0eRgJ",
            "IAEoCzIXLm9iamVjdC5JbnRlZ3JpdHlIZWFkZXJIABIyCgxTdG9yYWdlR3Jv",
            "dXAYCiABKAsyGi5zdG9yYWdlZ3JvdXAuU3RvcmFnZUdyb3VwSAASJgoJUHVi",
            "bGljS2V5GAsgASgLMhEub2JqZWN0LlB1YmxpY0tleUgAQgcKBVZhbHVlIgsK",
            "CVRvbWJzdG9uZSK6AQoMU3lzdGVtSGVhZGVyEg8KB1ZlcnNpb24YASABKAQS",
            "FQoNUGF5bG9hZExlbmd0aBgCIAEoBBIWCgJJRBgDIAEoDEIK2t4fAklEyN4f",
            "ABIgCgdPd25lcklEGAQgASgMQg/a3h8HT3duZXJJRMjeHwASGAoDQ0lEGAUg",
            "ASgMQgva3h8DQ0lEyN4fABIuCglDcmVhdGVkQXQYBiABKAsyFS5vYmplY3Qu",
            "Q3JlYXRpb25Qb2ludEIEyN4fACIwCg1DcmVhdGlvblBvaW50EhAKCFVuaXhU",
            "aW1lGAEgASgDEg0KBUVwb2NoGAIgASgEIkUKD0ludGVncml0eUhlYWRlchIX",
            "Cg9IZWFkZXJzQ2hlY2tzdW0YASABKAwSGQoRQ2hlY2tzdW1TaWduYXR1cmUY",
            "AiABKAwilQEKBExpbmsSHwoEdHlwZRgBIAEoDjIRLm9iamVjdC5MaW5rLlR5",
            "cGUSFgoCSUQYAiABKAxCCtreHwJJRMjeHwAiVAoEVHlwZRILCgdVbmtub3du",
            "EAASCgoGUGFyZW50EAESDAoIUHJldmlvdXMQAhIICgROZXh0EAMSCQoFQ2hp",
            "bGQQBBIQCgxTdG9yYWdlR3JvdXAQBSJmCglUcmFuc2Zvcm0SJAoEdHlwZRgB",
            "IAEoDjIWLm9iamVjdC5UcmFuc2Zvcm0uVHlwZSIzCgRUeXBlEgsKB1Vua25v",
            "d24QABIJCgVTcGxpdBABEggKBFNpZ24QAhIJCgVNb3VsZBADInIKBk9iamVj",
            "dBIwCgxTeXN0ZW1IZWFkZXIYASABKAsyFC5vYmplY3QuU3lzdGVtSGVhZGVy",
            "QgTI3h8AEiUKB0hlYWRlcnMYAiADKAsyDi5vYmplY3QuSGVhZGVyQgTI3h8A",
            "Eg8KB1BheWxvYWQYAyABKAwiGgoJUHVibGljS2V5Eg0KBVZhbHVlGAEgASgM",
            "QkFaKGdpdGh1Yi5jb20vbnNwY2MtZGV2L25lb2ZzLWFwaS1nby9vYmplY3Sq",
            "AhBOZW9GUy5BUEkuT2JqZWN02OIeAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.Refs.TypesReflection.Descriptor, global::NeoFS.API.Session.TypesReflection.Descriptor, global::NeoFS.API.StorageGroup.TypesReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Range), global::NeoFS.API.Object.Range.Parser, new[]{ "Offset", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.UserHeader), global::NeoFS.API.Object.UserHeader.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Header), global::NeoFS.API.Object.Header.Parser, new[]{ "Link", "Redirect", "UserHeader", "Transform", "Tombstone", "Verify", "HomoHash", "PayloadChecksum", "Integrity", "StorageGroup", "PublicKey" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Tombstone), global::NeoFS.API.Object.Tombstone.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.SystemHeader), global::NeoFS.API.Object.SystemHeader.Parser, new[]{ "Version", "PayloadLength", "ID", "OwnerID", "CID", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.CreationPoint), global::NeoFS.API.Object.CreationPoint.Parser, new[]{ "UnixTime", "Epoch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.IntegrityHeader), global::NeoFS.API.Object.IntegrityHeader.Parser, new[]{ "HeadersChecksum", "ChecksumSignature" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Link), global::NeoFS.API.Object.Link.Parser, new[]{ "Type", "ID" }, null, new[]{ typeof(global::NeoFS.API.Object.Link.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Transform), global::NeoFS.API.Object.Transform.Parser, new[]{ "Type" }, null, new[]{ typeof(global::NeoFS.API.Object.Transform.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.Object), global::NeoFS.API.Object.Object.Parser, new[]{ "SystemHeader", "Headers", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Object.PublicKey), global::NeoFS.API.Object.PublicKey.Parser, new[]{ "Value" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Range : pb::IMessage<Range> {
    private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Range> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range(Range other) : this() {
      offset_ = other.offset_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range Clone() {
      return new Range(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private ulong offset_;
    /// <summary>
    /// Offset of the data range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 2;
    private ulong length_;
    /// <summary>
    /// Length of the data range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Range);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Range other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (Length != 0UL) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Offset);
      }
      if (Length != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
      }
      if (Length != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Range other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      if (other.Length != 0UL) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadUInt64();
            break;
          }
          case 16: {
            Length = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserHeader : pb::IMessage<UserHeader> {
    private static readonly pb::MessageParser<UserHeader> _parser = new pb::MessageParser<UserHeader>(() => new UserHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserHeader(UserHeader other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserHeader Clone() {
      return new UserHeader(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// Key of the user's header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// Value of the user's header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserHeader other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Header : pb::IMessage<Header> {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.Link:
          Link = other.Link.Clone();
          break;
        case ValueOneofCase.Redirect:
          Redirect = other.Redirect.Clone();
          break;
        case ValueOneofCase.UserHeader:
          UserHeader = other.UserHeader.Clone();
          break;
        case ValueOneofCase.Transform:
          Transform = other.Transform.Clone();
          break;
        case ValueOneofCase.Tombstone:
          Tombstone = other.Tombstone.Clone();
          break;
        case ValueOneofCase.Verify:
          Verify = other.Verify.Clone();
          break;
        case ValueOneofCase.HomoHash:
          HomoHash = other.HomoHash;
          break;
        case ValueOneofCase.PayloadChecksum:
          PayloadChecksum = other.PayloadChecksum;
          break;
        case ValueOneofCase.Integrity:
          Integrity = other.Integrity.Clone();
          break;
        case ValueOneofCase.StorageGroup:
          StorageGroup = other.StorageGroup.Clone();
          break;
        case ValueOneofCase.PublicKey:
          PublicKey = other.PublicKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "Link" field.</summary>
    public const int LinkFieldNumber = 1;
    /// <summary>
    /// Link to other objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Link Link {
      get { return valueCase_ == ValueOneofCase.Link ? (global::NeoFS.API.Object.Link) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Link;
      }
    }

    /// <summary>Field number for the "Redirect" field.</summary>
    public const int RedirectFieldNumber = 2;
    /// <summary>
    /// Redirect not used yet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Refs.Address Redirect {
      get { return valueCase_ == ValueOneofCase.Redirect ? (global::NeoFS.API.Refs.Address) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Redirect;
      }
    }

    /// <summary>Field number for the "UserHeader" field.</summary>
    public const int UserHeaderFieldNumber = 3;
    /// <summary>
    /// UserHeader is a set of KV headers defined by user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.UserHeader UserHeader {
      get { return valueCase_ == ValueOneofCase.UserHeader ? (global::NeoFS.API.Object.UserHeader) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.UserHeader;
      }
    }

    /// <summary>Field number for the "Transform" field.</summary>
    public const int TransformFieldNumber = 4;
    /// <summary>
    /// Transform defines transform operation (e.g. payload split)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Transform Transform {
      get { return valueCase_ == ValueOneofCase.Transform ? (global::NeoFS.API.Object.Transform) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Transform;
      }
    }

    /// <summary>Field number for the "Tombstone" field.</summary>
    public const int TombstoneFieldNumber = 5;
    /// <summary>
    /// Tombstone header that set up in deleted objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Tombstone Tombstone {
      get { return valueCase_ == ValueOneofCase.Tombstone ? (global::NeoFS.API.Object.Tombstone) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Tombstone;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 6;
    /// <summary>
    /// Verify header that contains session public key and user's signature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Session.VerificationHeader Verify {
      get { return valueCase_ == ValueOneofCase.Verify ? (global::NeoFS.API.Session.VerificationHeader) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Verify;
      }
    }

    /// <summary>Field number for the "HomoHash" field.</summary>
    public const int HomoHashFieldNumber = 7;
    /// <summary>
    /// HomoHash is a homomorphic hash of original object payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HomoHash {
      get { return valueCase_ == ValueOneofCase.HomoHash ? (pb::ByteString) value_ : pb::ByteString.Empty; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.HomoHash;
      }
    }

    /// <summary>Field number for the "PayloadChecksum" field.</summary>
    public const int PayloadChecksumFieldNumber = 8;
    /// <summary>
    /// PayloadChecksum of actual object's payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PayloadChecksum {
      get { return valueCase_ == ValueOneofCase.PayloadChecksum ? (pb::ByteString) value_ : pb::ByteString.Empty; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        valueCase_ = ValueOneofCase.PayloadChecksum;
      }
    }

    /// <summary>Field number for the "Integrity" field.</summary>
    public const int IntegrityFieldNumber = 9;
    /// <summary>
    /// Integrity header with checksum of all above headers in the object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.IntegrityHeader Integrity {
      get { return valueCase_ == ValueOneofCase.Integrity ? (global::NeoFS.API.Object.IntegrityHeader) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.Integrity;
      }
    }

    /// <summary>Field number for the "StorageGroup" field.</summary>
    public const int StorageGroupFieldNumber = 10;
    /// <summary>
    /// StorageGroup contains meta information for the data audit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.StorageGroup.StorageGroup StorageGroup {
      get { return valueCase_ == ValueOneofCase.StorageGroup ? (global::NeoFS.API.StorageGroup.StorageGroup) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.StorageGroup;
      }
    }

    /// <summary>Field number for the "PublicKey" field.</summary>
    public const int PublicKeyFieldNumber = 11;
    /// <summary>
    /// PublicKey of owner of the object. Key is used for verification and can be based on NeoID or x509 cert.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.PublicKey PublicKey {
      get { return valueCase_ == ValueOneofCase.PublicKey ? (global::NeoFS.API.Object.PublicKey) value_ : null; }
      set {
        value_ = value;
        valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.PublicKey;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "Value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      Link = 1,
      Redirect = 2,
      UserHeader = 3,
      Transform = 4,
      Tombstone = 5,
      Verify = 6,
      HomoHash = 7,
      PayloadChecksum = 8,
      Integrity = 9,
      StorageGroup = 10,
      PublicKey = 11,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Link, other.Link)) return false;
      if (!object.Equals(Redirect, other.Redirect)) return false;
      if (!object.Equals(UserHeader, other.UserHeader)) return false;
      if (!object.Equals(Transform, other.Transform)) return false;
      if (!object.Equals(Tombstone, other.Tombstone)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      if (HomoHash != other.HomoHash) return false;
      if (PayloadChecksum != other.PayloadChecksum) return false;
      if (!object.Equals(Integrity, other.Integrity)) return false;
      if (!object.Equals(StorageGroup, other.StorageGroup)) return false;
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.Link) hash ^= Link.GetHashCode();
      if (valueCase_ == ValueOneofCase.Redirect) hash ^= Redirect.GetHashCode();
      if (valueCase_ == ValueOneofCase.UserHeader) hash ^= UserHeader.GetHashCode();
      if (valueCase_ == ValueOneofCase.Transform) hash ^= Transform.GetHashCode();
      if (valueCase_ == ValueOneofCase.Tombstone) hash ^= Tombstone.GetHashCode();
      if (valueCase_ == ValueOneofCase.Verify) hash ^= Verify.GetHashCode();
      if (valueCase_ == ValueOneofCase.HomoHash) hash ^= HomoHash.GetHashCode();
      if (valueCase_ == ValueOneofCase.PayloadChecksum) hash ^= PayloadChecksum.GetHashCode();
      if (valueCase_ == ValueOneofCase.Integrity) hash ^= Integrity.GetHashCode();
      if (valueCase_ == ValueOneofCase.StorageGroup) hash ^= StorageGroup.GetHashCode();
      if (valueCase_ == ValueOneofCase.PublicKey) hash ^= PublicKey.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (valueCase_ == ValueOneofCase.Link) {
        output.WriteRawTag(10);
        output.WriteMessage(Link);
      }
      if (valueCase_ == ValueOneofCase.Redirect) {
        output.WriteRawTag(18);
        output.WriteMessage(Redirect);
      }
      if (valueCase_ == ValueOneofCase.UserHeader) {
        output.WriteRawTag(26);
        output.WriteMessage(UserHeader);
      }
      if (valueCase_ == ValueOneofCase.Transform) {
        output.WriteRawTag(34);
        output.WriteMessage(Transform);
      }
      if (valueCase_ == ValueOneofCase.Tombstone) {
        output.WriteRawTag(42);
        output.WriteMessage(Tombstone);
      }
      if (valueCase_ == ValueOneofCase.Verify) {
        output.WriteRawTag(50);
        output.WriteMessage(Verify);
      }
      if (valueCase_ == ValueOneofCase.HomoHash) {
        output.WriteRawTag(58);
        output.WriteBytes(HomoHash);
      }
      if (valueCase_ == ValueOneofCase.PayloadChecksum) {
        output.WriteRawTag(66);
        output.WriteBytes(PayloadChecksum);
      }
      if (valueCase_ == ValueOneofCase.Integrity) {
        output.WriteRawTag(74);
        output.WriteMessage(Integrity);
      }
      if (valueCase_ == ValueOneofCase.StorageGroup) {
        output.WriteRawTag(82);
        output.WriteMessage(StorageGroup);
      }
      if (valueCase_ == ValueOneofCase.PublicKey) {
        output.WriteRawTag(90);
        output.WriteMessage(PublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.Link) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Link);
      }
      if (valueCase_ == ValueOneofCase.Redirect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Redirect);
      }
      if (valueCase_ == ValueOneofCase.UserHeader) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserHeader);
      }
      if (valueCase_ == ValueOneofCase.Transform) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      if (valueCase_ == ValueOneofCase.Tombstone) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tombstone);
      }
      if (valueCase_ == ValueOneofCase.Verify) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (valueCase_ == ValueOneofCase.HomoHash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HomoHash);
      }
      if (valueCase_ == ValueOneofCase.PayloadChecksum) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PayloadChecksum);
      }
      if (valueCase_ == ValueOneofCase.Integrity) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Integrity);
      }
      if (valueCase_ == ValueOneofCase.StorageGroup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageGroup);
      }
      if (valueCase_ == ValueOneofCase.PublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.Link:
          if (Link == null) {
            Link = new global::NeoFS.API.Object.Link();
          }
          Link.MergeFrom(other.Link);
          break;
        case ValueOneofCase.Redirect:
          if (Redirect == null) {
            Redirect = new global::NeoFS.API.Refs.Address();
          }
          Redirect.MergeFrom(other.Redirect);
          break;
        case ValueOneofCase.UserHeader:
          if (UserHeader == null) {
            UserHeader = new global::NeoFS.API.Object.UserHeader();
          }
          UserHeader.MergeFrom(other.UserHeader);
          break;
        case ValueOneofCase.Transform:
          if (Transform == null) {
            Transform = new global::NeoFS.API.Object.Transform();
          }
          Transform.MergeFrom(other.Transform);
          break;
        case ValueOneofCase.Tombstone:
          if (Tombstone == null) {
            Tombstone = new global::NeoFS.API.Object.Tombstone();
          }
          Tombstone.MergeFrom(other.Tombstone);
          break;
        case ValueOneofCase.Verify:
          if (Verify == null) {
            Verify = new global::NeoFS.API.Session.VerificationHeader();
          }
          Verify.MergeFrom(other.Verify);
          break;
        case ValueOneofCase.HomoHash:
          HomoHash = other.HomoHash;
          break;
        case ValueOneofCase.PayloadChecksum:
          PayloadChecksum = other.PayloadChecksum;
          break;
        case ValueOneofCase.Integrity:
          if (Integrity == null) {
            Integrity = new global::NeoFS.API.Object.IntegrityHeader();
          }
          Integrity.MergeFrom(other.Integrity);
          break;
        case ValueOneofCase.StorageGroup:
          if (StorageGroup == null) {
            StorageGroup = new global::NeoFS.API.StorageGroup.StorageGroup();
          }
          StorageGroup.MergeFrom(other.StorageGroup);
          break;
        case ValueOneofCase.PublicKey:
          if (PublicKey == null) {
            PublicKey = new global::NeoFS.API.Object.PublicKey();
          }
          PublicKey.MergeFrom(other.PublicKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::NeoFS.API.Object.Link subBuilder = new global::NeoFS.API.Object.Link();
            if (valueCase_ == ValueOneofCase.Link) {
              subBuilder.MergeFrom(Link);
            }
            input.ReadMessage(subBuilder);
            Link = subBuilder;
            break;
          }
          case 18: {
            global::NeoFS.API.Refs.Address subBuilder = new global::NeoFS.API.Refs.Address();
            if (valueCase_ == ValueOneofCase.Redirect) {
              subBuilder.MergeFrom(Redirect);
            }
            input.ReadMessage(subBuilder);
            Redirect = subBuilder;
            break;
          }
          case 26: {
            global::NeoFS.API.Object.UserHeader subBuilder = new global::NeoFS.API.Object.UserHeader();
            if (valueCase_ == ValueOneofCase.UserHeader) {
              subBuilder.MergeFrom(UserHeader);
            }
            input.ReadMessage(subBuilder);
            UserHeader = subBuilder;
            break;
          }
          case 34: {
            global::NeoFS.API.Object.Transform subBuilder = new global::NeoFS.API.Object.Transform();
            if (valueCase_ == ValueOneofCase.Transform) {
              subBuilder.MergeFrom(Transform);
            }
            input.ReadMessage(subBuilder);
            Transform = subBuilder;
            break;
          }
          case 42: {
            global::NeoFS.API.Object.Tombstone subBuilder = new global::NeoFS.API.Object.Tombstone();
            if (valueCase_ == ValueOneofCase.Tombstone) {
              subBuilder.MergeFrom(Tombstone);
            }
            input.ReadMessage(subBuilder);
            Tombstone = subBuilder;
            break;
          }
          case 50: {
            global::NeoFS.API.Session.VerificationHeader subBuilder = new global::NeoFS.API.Session.VerificationHeader();
            if (valueCase_ == ValueOneofCase.Verify) {
              subBuilder.MergeFrom(Verify);
            }
            input.ReadMessage(subBuilder);
            Verify = subBuilder;
            break;
          }
          case 58: {
            HomoHash = input.ReadBytes();
            break;
          }
          case 66: {
            PayloadChecksum = input.ReadBytes();
            break;
          }
          case 74: {
            global::NeoFS.API.Object.IntegrityHeader subBuilder = new global::NeoFS.API.Object.IntegrityHeader();
            if (valueCase_ == ValueOneofCase.Integrity) {
              subBuilder.MergeFrom(Integrity);
            }
            input.ReadMessage(subBuilder);
            Integrity = subBuilder;
            break;
          }
          case 82: {
            global::NeoFS.API.StorageGroup.StorageGroup subBuilder = new global::NeoFS.API.StorageGroup.StorageGroup();
            if (valueCase_ == ValueOneofCase.StorageGroup) {
              subBuilder.MergeFrom(StorageGroup);
            }
            input.ReadMessage(subBuilder);
            StorageGroup = subBuilder;
            break;
          }
          case 90: {
            global::NeoFS.API.Object.PublicKey subBuilder = new global::NeoFS.API.Object.PublicKey();
            if (valueCase_ == ValueOneofCase.PublicKey) {
              subBuilder.MergeFrom(PublicKey);
            }
            input.ReadMessage(subBuilder);
            PublicKey = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tombstone : pb::IMessage<Tombstone> {
    private static readonly pb::MessageParser<Tombstone> _parser = new pb::MessageParser<Tombstone>(() => new Tombstone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tombstone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone(Tombstone other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tombstone Clone() {
      return new Tombstone(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tombstone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tombstone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tombstone other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SystemHeader : pb::IMessage<SystemHeader> {
    private static readonly pb::MessageParser<SystemHeader> _parser = new pb::MessageParser<SystemHeader>(() => new SystemHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemHeader(SystemHeader other) : this() {
      version_ = other.version_;
      payloadLength_ = other.payloadLength_;
      iD_ = other.iD_;
      ownerID_ = other.ownerID_;
      cID_ = other.cID_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemHeader Clone() {
      return new SystemHeader(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private ulong version_;
    /// <summary>
    /// Version of the object structure
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "PayloadLength" field.</summary>
    public const int PayloadLengthFieldNumber = 2;
    private ulong payloadLength_;
    /// <summary>
    /// PayloadLength is an object payload length
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PayloadLength {
      get { return payloadLength_; }
      set {
        payloadLength_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 3;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is an object identifier, is a valid UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 4;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CID" field.</summary>
    public const int CIDFieldNumber = 5;
    private pb::ByteString cID_ = pb::ByteString.Empty;
    /// <summary>
    /// CID is a SHA256 hash of the container structure (container identifier)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CID {
      get { return cID_; }
      set {
        cID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedAt" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private global::NeoFS.API.Object.CreationPoint createdAt_;
    /// <summary>
    /// CreatedAt is a timestamp of object creation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.CreationPoint CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (PayloadLength != other.PayloadLength) return false;
      if (ID != other.ID) return false;
      if (OwnerID != other.OwnerID) return false;
      if (CID != other.CID) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0UL) hash ^= Version.GetHashCode();
      if (PayloadLength != 0UL) hash ^= PayloadLength.GetHashCode();
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (CID.Length != 0) hash ^= CID.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Version);
      }
      if (PayloadLength != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(PayloadLength);
      }
      if (ID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ID);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OwnerID);
      }
      if (CID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(CID);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Version);
      }
      if (PayloadLength != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PayloadLength);
      }
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (CID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CID);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemHeader other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0UL) {
        Version = other.Version;
      }
      if (other.PayloadLength != 0UL) {
        PayloadLength = other.PayloadLength;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.CID.Length != 0) {
        CID = other.CID;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::NeoFS.API.Object.CreationPoint();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt64();
            break;
          }
          case 16: {
            PayloadLength = input.ReadUInt64();
            break;
          }
          case 26: {
            ID = input.ReadBytes();
            break;
          }
          case 34: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 42: {
            CID = input.ReadBytes();
            break;
          }
          case 50: {
            if (createdAt_ == null) {
              CreatedAt = new global::NeoFS.API.Object.CreationPoint();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreationPoint : pb::IMessage<CreationPoint> {
    private static readonly pb::MessageParser<CreationPoint> _parser = new pb::MessageParser<CreationPoint>(() => new CreationPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreationPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreationPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreationPoint(CreationPoint other) : this() {
      unixTime_ = other.unixTime_;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreationPoint Clone() {
      return new CreationPoint(this);
    }

    /// <summary>Field number for the "UnixTime" field.</summary>
    public const int UnixTimeFieldNumber = 1;
    private long unixTime_;
    /// <summary>
    /// UnixTime is a date of creation in unixtime format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnixTime {
      get { return unixTime_; }
      set {
        unixTime_ = value;
      }
    }

    /// <summary>Field number for the "Epoch" field.</summary>
    public const int EpochFieldNumber = 2;
    private ulong epoch_;
    /// <summary>
    /// Epoch is a date of creation in NeoFS epochs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreationPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreationPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnixTime != other.UnixTime) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnixTime != 0L) hash ^= UnixTime.GetHashCode();
      if (Epoch != 0UL) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnixTime != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnixTime);
      }
      if (Epoch != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnixTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnixTime);
      }
      if (Epoch != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreationPoint other) {
      if (other == null) {
        return;
      }
      if (other.UnixTime != 0L) {
        UnixTime = other.UnixTime;
      }
      if (other.Epoch != 0UL) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnixTime = input.ReadInt64();
            break;
          }
          case 16: {
            Epoch = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IntegrityHeader : pb::IMessage<IntegrityHeader> {
    private static readonly pb::MessageParser<IntegrityHeader> _parser = new pb::MessageParser<IntegrityHeader>(() => new IntegrityHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntegrityHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegrityHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegrityHeader(IntegrityHeader other) : this() {
      headersChecksum_ = other.headersChecksum_;
      checksumSignature_ = other.checksumSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntegrityHeader Clone() {
      return new IntegrityHeader(this);
    }

    /// <summary>Field number for the "HeadersChecksum" field.</summary>
    public const int HeadersChecksumFieldNumber = 1;
    private pb::ByteString headersChecksum_ = pb::ByteString.Empty;
    /// <summary>
    /// HeadersChecksum is a checksum of all above headers in the object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString HeadersChecksum {
      get { return headersChecksum_; }
      set {
        headersChecksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChecksumSignature" field.</summary>
    public const int ChecksumSignatureFieldNumber = 2;
    private pb::ByteString checksumSignature_ = pb::ByteString.Empty;
    /// <summary>
    /// ChecksumSignature is an user's signature of checksum to verify if it is correct
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ChecksumSignature {
      get { return checksumSignature_; }
      set {
        checksumSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntegrityHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntegrityHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeadersChecksum != other.HeadersChecksum) return false;
      if (ChecksumSignature != other.ChecksumSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HeadersChecksum.Length != 0) hash ^= HeadersChecksum.GetHashCode();
      if (ChecksumSignature.Length != 0) hash ^= ChecksumSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HeadersChecksum.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(HeadersChecksum);
      }
      if (ChecksumSignature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ChecksumSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HeadersChecksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(HeadersChecksum);
      }
      if (ChecksumSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ChecksumSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntegrityHeader other) {
      if (other == null) {
        return;
      }
      if (other.HeadersChecksum.Length != 0) {
        HeadersChecksum = other.HeadersChecksum;
      }
      if (other.ChecksumSignature.Length != 0) {
        ChecksumSignature = other.ChecksumSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HeadersChecksum = input.ReadBytes();
            break;
          }
          case 18: {
            ChecksumSignature = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Link : pb::IMessage<Link> {
    private static readonly pb::MessageParser<Link> _parser = new pb::MessageParser<Link>(() => new Link());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Link> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link(Link other) : this() {
      type_ = other.type_;
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Link Clone() {
      return new Link(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::NeoFS.API.Object.Link.Types.Type type_ = global::NeoFS.API.Object.Link.Types.Type.Unknown;
    /// <summary>
    /// Type of link
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Link.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is an object identifier, is a valid UUIDv4
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Link);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Link other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::NeoFS.API.Object.Link.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::NeoFS.API.Object.Link.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (ID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::NeoFS.API.Object.Link.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Link other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::NeoFS.API.Object.Link.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::NeoFS.API.Object.Link.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            ID = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Link message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        /// <summary>
        /// Parent object created during object transformation
        /// </summary>
        [pbr::OriginalName("Parent")] Parent = 1,
        /// <summary>
        /// Previous object in the linked list created during object transformation
        /// </summary>
        [pbr::OriginalName("Previous")] Previous = 2,
        /// <summary>
        /// Next object in the linked list created during object transformation
        /// </summary>
        [pbr::OriginalName("Next")] Next = 3,
        /// <summary>
        /// Child object created during object transformation
        /// </summary>
        [pbr::OriginalName("Child")] Child = 4,
        /// <summary>
        /// Object that included into this storage group
        /// </summary>
        [pbr::OriginalName("StorageGroup")] StorageGroup = 5,
      }

    }
    #endregion

  }

  public sealed partial class Transform : pb::IMessage<Transform> {
    private static readonly pb::MessageParser<Transform> _parser = new pb::MessageParser<Transform>(() => new Transform());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transform> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform(Transform other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transform Clone() {
      return new Transform(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::NeoFS.API.Object.Transform.Types.Type type_ = global::NeoFS.API.Object.Transform.Types.Type.Unknown;
    /// <summary>
    /// Type of object transformation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.Transform.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transform);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transform other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::NeoFS.API.Object.Transform.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::NeoFS.API.Object.Transform.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::NeoFS.API.Object.Transform.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transform other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::NeoFS.API.Object.Transform.Types.Type.Unknown) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::NeoFS.API.Object.Transform.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Transform message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        /// <summary>
        /// Split sets when object created after payload split
        /// </summary>
        [pbr::OriginalName("Split")] Split = 1,
        /// <summary>
        /// Sign sets when object created after re-signing (doesn't used)
        /// </summary>
        [pbr::OriginalName("Sign")] Sign = 2,
        /// <summary>
        /// Mould sets when object created after filling missing headers in the object
        /// </summary>
        [pbr::OriginalName("Mould")] Mould = 3,
      }

    }
    #endregion

  }

  public sealed partial class Object : pb::IMessage<Object> {
    private static readonly pb::MessageParser<Object> _parser = new pb::MessageParser<Object>(() => new Object());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Object> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object(Object other) : this() {
      systemHeader_ = other.systemHeader_ != null ? other.systemHeader_.Clone() : null;
      headers_ = other.headers_.Clone();
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Object Clone() {
      return new Object(this);
    }

    /// <summary>Field number for the "SystemHeader" field.</summary>
    public const int SystemHeaderFieldNumber = 1;
    private global::NeoFS.API.Object.SystemHeader systemHeader_;
    /// <summary>
    /// SystemHeader describes system header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Object.SystemHeader SystemHeader {
      get { return systemHeader_; }
      set {
        systemHeader_ = value;
      }
    }

    /// <summary>Field number for the "Headers" field.</summary>
    public const int HeadersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NeoFS.API.Object.Header> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(18, global::NeoFS.API.Object.Header.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Object.Header> headers_ = new pbc::RepeatedField<global::NeoFS.API.Object.Header>();
    /// <summary>
    /// Headers describes a set of an extended headers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Object.Header> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Payload is an object's payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Object);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Object other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SystemHeader, other.SystemHeader)) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (systemHeader_ != null) hash ^= SystemHeader.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (systemHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SystemHeader);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (Payload.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (systemHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemHeader);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Object other) {
      if (other == null) {
        return;
      }
      if (other.systemHeader_ != null) {
        if (systemHeader_ == null) {
          SystemHeader = new global::NeoFS.API.Object.SystemHeader();
        }
        SystemHeader.MergeFrom(other.SystemHeader);
      }
      headers_.Add(other.headers_);
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (systemHeader_ == null) {
              SystemHeader = new global::NeoFS.API.Object.SystemHeader();
            }
            input.ReadMessage(SystemHeader);
            break;
          }
          case 18: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
          case 26: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PublicKey : pb::IMessage<PublicKey> {
    private static readonly pb::MessageParser<PublicKey> _parser = new pb::MessageParser<PublicKey>(() => new PublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Object.TypesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey(PublicKey other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey Clone() {
      return new PublicKey(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// Value contains marshaled ecdsa public key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicKey other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
