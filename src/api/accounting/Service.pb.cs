// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: accounting/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Accounting {

  /// <summary>Holder for reflection information generated from accounting/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for accounting/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhhY2NvdW50aW5nL3NlcnZpY2UucHJvdG8SCmFjY291bnRpbmcaEnNlcnZp",
            "Y2UvbWV0YS5wcm90bxoUc2VydmljZS92ZXJpZnkucHJvdG8aFWRlY2ltYWwv",
            "ZGVjaW1hbC5wcm90bxoWYWNjb3VudGluZy90eXBlcy5wcm90bxotZ2l0aHVi",
            "LmNvbS9nb2dvL3Byb3RvYnVmL2dvZ29wcm90by9nb2dvLnByb3RvIqQBCg5C",
            "YWxhbmNlUmVxdWVzdBIgCgdPd25lcklEGAEgASgMQg/a3h8HT3duZXJJRMje",
            "HwASMgoETWV0YRhiIAEoCzIaLnNlcnZpY2UuUmVxdWVzdE1ldGFIZWFkZXJC",
            "CNDeHwHI3h8AEjwKBlZlcmlmeRhjIAEoCzIiLnNlcnZpY2UuUmVxdWVzdFZl",
            "cmlmaWNhdGlvbkhlYWRlckII0N4fAcjeHwAiXwoPQmFsYW5jZVJlc3BvbnNl",
            "EiEKB0JhbGFuY2UYASABKAsyEC5kZWNpbWFsLkRlY2ltYWwSKQoMTG9ja0Fj",
            "Y291bnRzGAIgAygLMhMuYWNjb3VudGluZy5BY2NvdW50MlAKCkFjY291bnRp",
            "bmcSQgoHQmFsYW5jZRIaLmFjY291bnRpbmcuQmFsYW5jZVJlcXVlc3QaGy5h",
            "Y2NvdW50aW5nLkJhbGFuY2VSZXNwb25zZUJJWixnaXRodWIuY29tL25zcGNj",
            "LWRldi9uZW9mcy1hcGktZ28vYWNjb3VudGluZ6oCFE5lb0ZTLkFQSS5BY2Nv",
            "dW50aW5n2OIeAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.Service.MetaReflection.Descriptor, global::NeoFS.API.Service.VerifyReflection.Descriptor, global::NeoFS.API.Decimal.DecimalReflection.Descriptor, global::NeoFS.API.Accounting.TypesReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.BalanceRequest), global::NeoFS.API.Accounting.BalanceRequest.Parser, new[]{ "OwnerID", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.BalanceResponse), global::NeoFS.API.Accounting.BalanceResponse.Parser, new[]{ "Balance", "LockAccounts" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BalanceRequest : pb::IMessage<BalanceRequest> {
    private static readonly pb::MessageParser<BalanceRequest> _parser = new pb::MessageParser<BalanceRequest>(() => new BalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest(BalanceRequest other) : this() {
      ownerID_ = other.ownerID_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceRequest Clone() {
      return new BalanceRequest(this);
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 1;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerID);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BalanceResponse : pb::IMessage<BalanceResponse> {
    private static readonly pb::MessageParser<BalanceResponse> _parser = new pb::MessageParser<BalanceResponse>(() => new BalanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceResponse(BalanceResponse other) : this() {
      balance_ = other.balance_ != null ? other.balance_.Clone() : null;
      lockAccounts_ = other.lockAccounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BalanceResponse Clone() {
      return new BalanceResponse(this);
    }

    /// <summary>Field number for the "Balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private global::NeoFS.API.Decimal.Decimal balance_;
    /// <summary>
    /// Balance contains current account balance state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Decimal.Decimal Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "LockAccounts" field.</summary>
    public const int LockAccountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::NeoFS.API.Accounting.Account> _repeated_lockAccounts_codec
        = pb::FieldCodec.ForMessage(18, global::NeoFS.API.Accounting.Account.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Accounting.Account> lockAccounts_ = new pbc::RepeatedField<global::NeoFS.API.Accounting.Account>();
    /// <summary>
    /// LockAccounts contains information about locked funds. Locked funds appear
    /// when user pays for storage or withdraw assets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Accounting.Account> LockAccounts {
      get { return lockAccounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Balance, other.Balance)) return false;
      if(!lockAccounts_.Equals(other.lockAccounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (balance_ != null) hash ^= Balance.GetHashCode();
      hash ^= lockAccounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (balance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Balance);
      }
      lockAccounts_.WriteTo(output, _repeated_lockAccounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      size += lockAccounts_.CalculateSize(_repeated_lockAccounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BalanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          Balance = new global::NeoFS.API.Decimal.Decimal();
        }
        Balance.MergeFrom(other.Balance);
      }
      lockAccounts_.Add(other.lockAccounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (balance_ == null) {
              Balance = new global::NeoFS.API.Decimal.Decimal();
            }
            input.ReadMessage(Balance);
            break;
          }
          case 18: {
            lockAccounts_.AddEntriesFrom(input, _repeated_lockAccounts_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
