// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: accounting/withdraw.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NeoFS.API.Accounting {

  /// <summary>Holder for reflection information generated from accounting/withdraw.proto</summary>
  public static partial class WithdrawReflection {

    #region Descriptor
    /// <summary>File descriptor for accounting/withdraw.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WithdrawReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlhY2NvdW50aW5nL3dpdGhkcmF3LnByb3RvEgphY2NvdW50aW5nGhJzZXJ2",
            "aWNlL21ldGEucHJvdG8aFHNlcnZpY2UvdmVyaWZ5LnByb3RvGhVkZWNpbWFs",
            "L2RlY2ltYWwucHJvdG8aLWdpdGh1Yi5jb20vZ29nby9wcm90b2J1Zi9nb2dv",
            "cHJvdG8vZ29nby5wcm90byKJAQoESXRlbRIcCgJJRBgBIAEoDEIQ2t4fCENo",
            "ZXF1ZUlEyN4fABIgCgdPd25lcklEGAIgASgMQg/a3h8HT3duZXJJRMjeHwAS",
            "IAoGQW1vdW50GAMgASgLMhAuZGVjaW1hbC5EZWNpbWFsEg4KBkhlaWdodBgE",
            "IAEoBBIPCgdQYXlsb2FkGAUgASgMIr4BCgpHZXRSZXF1ZXN0EhwKAklEGAEg",
            "ASgMQhDa3h8IQ2hlcXVlSUTI3h8AEiAKB093bmVySUQYAiABKAxCD9reHwdP",
            "d25lcklEyN4fABIyCgRNZXRhGGIgASgLMhouc2VydmljZS5SZXF1ZXN0TWV0",
            "YUhlYWRlckII0N4fAcjeHwASPAoGVmVyaWZ5GGMgASgLMiIuc2VydmljZS5S",
            "ZXF1ZXN0VmVyaWZpY2F0aW9uSGVhZGVyQgjQ3h8ByN4fACIxCgtHZXRSZXNw",
            "b25zZRIiCghXaXRoZHJhdxgBIAEoCzIQLmFjY291bnRpbmcuSXRlbSL4AQoK",
            "UHV0UmVxdWVzdBIgCgdPd25lcklEGAEgASgMQg/a3h8HT3duZXJJRMjeHwAS",
            "IAoGQW1vdW50GAIgASgLMhAuZGVjaW1hbC5EZWNpbWFsEg4KBkhlaWdodBgD",
            "IAEoBBIkCglNZXNzYWdlSUQYBCABKAxCEdreHwlNZXNzYWdlSUTI3h8AEjIK",
            "BE1ldGEYYiABKAsyGi5zZXJ2aWNlLlJlcXVlc3RNZXRhSGVhZGVyQgjQ3h8B",
            "yN4fABI8CgZWZXJpZnkYYyABKAsyIi5zZXJ2aWNlLlJlcXVlc3RWZXJpZmlj",
            "YXRpb25IZWFkZXJCCNDeHwHI3h8AIisKC1B1dFJlc3BvbnNlEhwKAklEGAEg",
            "ASgMQhDa3h8IQ2hlcXVlSUTI3h8AIqEBCgtMaXN0UmVxdWVzdBIgCgdPd25l",
            "cklEGAEgASgMQg/a3h8HT3duZXJJRMjeHwASMgoETWV0YRhiIAEoCzIaLnNl",
            "cnZpY2UuUmVxdWVzdE1ldGFIZWFkZXJCCNDeHwHI3h8AEjwKBlZlcmlmeRhj",
            "IAEoCzIiLnNlcnZpY2UuUmVxdWVzdFZlcmlmaWNhdGlvbkhlYWRlckII0N4f",
            "AcjeHwAiLwoMTGlzdFJlc3BvbnNlEh8KBUl0ZW1zGAEgAygLMhAuYWNjb3Vu",
            "dGluZy5JdGVtIucBCg1EZWxldGVSZXF1ZXN0EhwKAklEGAEgASgMQhDa3h8I",
            "Q2hlcXVlSUTI3h8AEiAKB093bmVySUQYAiABKAxCD9reHwdPd25lcklEyN4f",
            "ABIkCglNZXNzYWdlSUQYAyABKAxCEdreHwlNZXNzYWdlSUTI3h8AEjIKBE1l",
            "dGEYYiABKAsyGi5zZXJ2aWNlLlJlcXVlc3RNZXRhSGVhZGVyQgjQ3h8ByN4f",
            "ABI8CgZWZXJpZnkYYyABKAsyIi5zZXJ2aWNlLlJlcXVlc3RWZXJpZmljYXRp",
            "b25IZWFkZXJCCNDeHwHI3h8AIhAKDkRlbGV0ZVJlc3BvbnNlMvYBCghXaXRo",
            "ZHJhdxI2CgNHZXQSFi5hY2NvdW50aW5nLkdldFJlcXVlc3QaFy5hY2NvdW50",
            "aW5nLkdldFJlc3BvbnNlEjYKA1B1dBIWLmFjY291bnRpbmcuUHV0UmVxdWVz",
            "dBoXLmFjY291bnRpbmcuUHV0UmVzcG9uc2USOQoETGlzdBIXLmFjY291bnRp",
            "bmcuTGlzdFJlcXVlc3QaGC5hY2NvdW50aW5nLkxpc3RSZXNwb25zZRI/CgZE",
            "ZWxldGUSGS5hY2NvdW50aW5nLkRlbGV0ZVJlcXVlc3QaGi5hY2NvdW50aW5n",
            "LkRlbGV0ZVJlc3BvbnNlQklaLGdpdGh1Yi5jb20vbnNwY2MtZGV2L25lb2Zz",
            "LWFwaS1nby9hY2NvdW50aW5nqgIUTmVvRlMuQVBJLkFjY291bnRpbmfY4h4B",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NeoFS.API.Service.MetaReflection.Descriptor, global::NeoFS.API.Service.VerifyReflection.Descriptor, global::NeoFS.API.Decimal.DecimalReflection.Descriptor, global::Gogoproto.GogoReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.Item), global::NeoFS.API.Accounting.Item.Parser, new[]{ "ID", "OwnerID", "Amount", "Height", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.GetRequest), global::NeoFS.API.Accounting.GetRequest.Parser, new[]{ "ID", "OwnerID", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.GetResponse), global::NeoFS.API.Accounting.GetResponse.Parser, new[]{ "Withdraw" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.PutRequest), global::NeoFS.API.Accounting.PutRequest.Parser, new[]{ "OwnerID", "Amount", "Height", "MessageID", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.PutResponse), global::NeoFS.API.Accounting.PutResponse.Parser, new[]{ "ID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.ListRequest), global::NeoFS.API.Accounting.ListRequest.Parser, new[]{ "OwnerID", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.ListResponse), global::NeoFS.API.Accounting.ListResponse.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.DeleteRequest), global::NeoFS.API.Accounting.DeleteRequest.Parser, new[]{ "ID", "OwnerID", "MessageID", "Meta", "Verify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NeoFS.API.Accounting.DeleteResponse), global::NeoFS.API.Accounting.DeleteResponse.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      iD_ = other.iD_;
      ownerID_ = other.ownerID_;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      height_ = other.height_;
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is a cheque identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 2;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::NeoFS.API.Decimal.Decimal amount_;
    /// <summary>
    /// Amount of funds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Decimal.Decimal Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "Height" field.</summary>
    public const int HeightFieldNumber = 4;
    private ulong height_;
    /// <summary>
    /// Height is the neo blockchain height until the cheque is valid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "Payload" field.</summary>
    public const int PayloadFieldNumber = 5;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Payload contains cheque representation in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Height != other.Height) return false;
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Height != 0UL) hash ^= Height.GetHashCode();
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ID);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerID);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (Height != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Height);
      }
      if (Payload.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Height != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Height);
      }
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::NeoFS.API.Decimal.Decimal();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Height != 0UL) {
        Height = other.Height;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 26: {
            if (amount_ == null) {
              Amount = new global::NeoFS.API.Decimal.Decimal();
            }
            input.ReadMessage(Amount);
            break;
          }
          case 32: {
            Height = input.ReadUInt64();
            break;
          }
          case 42: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRequest : pb::IMessage<GetRequest> {
    private static readonly pb::MessageParser<GetRequest> _parser = new pb::MessageParser<GetRequest>(() => new GetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest(GetRequest other) : this() {
      iD_ = other.iD_;
      ownerID_ = other.ownerID_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRequest Clone() {
      return new GetRequest(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is cheque identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 2;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ID);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerID);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRequest other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetResponse : pb::IMessage<GetResponse> {
    private static readonly pb::MessageParser<GetResponse> _parser = new pb::MessageParser<GetResponse>(() => new GetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse(GetResponse other) : this() {
      withdraw_ = other.withdraw_ != null ? other.withdraw_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponse Clone() {
      return new GetResponse(this);
    }

    /// <summary>Field number for the "Withdraw" field.</summary>
    public const int WithdrawFieldNumber = 1;
    private global::NeoFS.API.Accounting.Item withdraw_;
    /// <summary>
    /// Withdraw is cheque with meta information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Accounting.Item Withdraw {
      get { return withdraw_; }
      set {
        withdraw_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Withdraw, other.Withdraw)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (withdraw_ != null) hash ^= Withdraw.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (withdraw_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Withdraw);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (withdraw_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Withdraw);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResponse other) {
      if (other == null) {
        return;
      }
      if (other.withdraw_ != null) {
        if (withdraw_ == null) {
          Withdraw = new global::NeoFS.API.Accounting.Item();
        }
        Withdraw.MergeFrom(other.Withdraw);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (withdraw_ == null) {
              Withdraw = new global::NeoFS.API.Accounting.Item();
            }
            input.ReadMessage(Withdraw);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutRequest : pb::IMessage<PutRequest> {
    private static readonly pb::MessageParser<PutRequest> _parser = new pb::MessageParser<PutRequest>(() => new PutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest(PutRequest other) : this() {
      ownerID_ = other.ownerID_;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      height_ = other.height_;
      messageID_ = other.messageID_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutRequest Clone() {
      return new PutRequest(this);
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 1;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::NeoFS.API.Decimal.Decimal amount_;
    /// <summary>
    /// Amount of funds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Decimal.Decimal Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "Height" field.</summary>
    public const int HeightFieldNumber = 3;
    private ulong height_;
    /// <summary>
    /// Height is the neo blockchain height until the cheque is valid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "MessageID" field.</summary>
    public const int MessageIDFieldNumber = 4;
    private pb::ByteString messageID_ = pb::ByteString.Empty;
    /// <summary>
    /// MessageID is a nonce for uniq request (UUIDv4)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageID {
      get { return messageID_; }
      set {
        messageID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Height != other.Height) return false;
      if (MessageID != other.MessageID) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Height != 0UL) hash ^= Height.GetHashCode();
      if (MessageID.Length != 0) hash ^= MessageID.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerID);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (Height != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Height);
      }
      if (MessageID.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(MessageID);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Height != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Height);
      }
      if (MessageID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageID);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutRequest other) {
      if (other == null) {
        return;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::NeoFS.API.Decimal.Decimal();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Height != 0UL) {
        Height = other.Height;
      }
      if (other.MessageID.Length != 0) {
        MessageID = other.MessageID;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 18: {
            if (amount_ == null) {
              Amount = new global::NeoFS.API.Decimal.Decimal();
            }
            input.ReadMessage(Amount);
            break;
          }
          case 24: {
            Height = input.ReadUInt64();
            break;
          }
          case 34: {
            MessageID = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutResponse : pb::IMessage<PutResponse> {
    private static readonly pb::MessageParser<PutResponse> _parser = new pb::MessageParser<PutResponse>(() => new PutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse(PutResponse other) : this() {
      iD_ = other.iD_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResponse Clone() {
      return new PutResponse(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is cheque identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutResponse other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListRequest : pb::IMessage<ListRequest> {
    private static readonly pb::MessageParser<ListRequest> _parser = new pb::MessageParser<ListRequest>(() => new ListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest(ListRequest other) : this() {
      ownerID_ = other.ownerID_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRequest Clone() {
      return new ListRequest(this);
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 1;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerID);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRequest other) {
      if (other == null) {
        return;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListResponse : pb::IMessage<ListResponse> {
    private static readonly pb::MessageParser<ListResponse> _parser = new pb::MessageParser<ListResponse>(() => new ListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse(ListResponse other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListResponse Clone() {
      return new ListResponse(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NeoFS.API.Accounting.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::NeoFS.API.Accounting.Item.Parser);
    private readonly pbc::RepeatedField<global::NeoFS.API.Accounting.Item> items_ = new pbc::RepeatedField<global::NeoFS.API.Accounting.Item>();
    /// <summary>
    /// Items is a set of cheques with meta information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NeoFS.API.Accounting.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListResponse other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      iD_ = other.iD_;
      ownerID_ = other.ownerID_;
      messageID_ = other.messageID_;
      meta_ = other.meta_ != null ? other.meta_.Clone() : null;
      verify_ = other.verify_ != null ? other.verify_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private pb::ByteString iD_ = pb::ByteString.Empty;
    /// <summary>
    /// ID is cheque identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OwnerID" field.</summary>
    public const int OwnerIDFieldNumber = 2;
    private pb::ByteString ownerID_ = pb::ByteString.Empty;
    /// <summary>
    /// OwnerID is a wallet address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MessageID" field.</summary>
    public const int MessageIDFieldNumber = 3;
    private pb::ByteString messageID_ = pb::ByteString.Empty;
    /// <summary>
    /// MessageID is a nonce for uniq request (UUIDv4)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageID {
      get { return messageID_; }
      set {
        messageID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 98;
    private global::NeoFS.API.Service.RequestMetaHeader meta_;
    /// <summary>
    /// RequestMetaHeader contains information about request meta headers (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestMetaHeader Meta {
      get { return meta_; }
      set {
        meta_ = value;
      }
    }

    /// <summary>Field number for the "Verify" field.</summary>
    public const int VerifyFieldNumber = 99;
    private global::NeoFS.API.Service.RequestVerificationHeader verify_;
    /// <summary>
    /// RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NeoFS.API.Service.RequestVerificationHeader Verify {
      get { return verify_; }
      set {
        verify_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (OwnerID != other.OwnerID) return false;
      if (MessageID != other.MessageID) return false;
      if (!object.Equals(Meta, other.Meta)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (OwnerID.Length != 0) hash ^= OwnerID.GetHashCode();
      if (MessageID.Length != 0) hash ^= MessageID.GetHashCode();
      if (meta_ != null) hash ^= Meta.GetHashCode();
      if (verify_ != null) hash ^= Verify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ID);
      }
      if (OwnerID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OwnerID);
      }
      if (MessageID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(MessageID);
      }
      if (meta_ != null) {
        output.WriteRawTag(146, 6);
        output.WriteMessage(Meta);
      }
      if (verify_ != null) {
        output.WriteRawTag(154, 6);
        output.WriteMessage(Verify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ID);
      }
      if (OwnerID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerID);
      }
      if (MessageID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageID);
      }
      if (meta_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Meta);
      }
      if (verify_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.OwnerID.Length != 0) {
        OwnerID = other.OwnerID;
      }
      if (other.MessageID.Length != 0) {
        MessageID = other.MessageID;
      }
      if (other.meta_ != null) {
        if (meta_ == null) {
          Meta = new global::NeoFS.API.Service.RequestMetaHeader();
        }
        Meta.MergeFrom(other.Meta);
      }
      if (other.verify_ != null) {
        if (verify_ == null) {
          Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
        }
        Verify.MergeFrom(other.Verify);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadBytes();
            break;
          }
          case 18: {
            OwnerID = input.ReadBytes();
            break;
          }
          case 26: {
            MessageID = input.ReadBytes();
            break;
          }
          case 786: {
            if (meta_ == null) {
              Meta = new global::NeoFS.API.Service.RequestMetaHeader();
            }
            input.ReadMessage(Meta);
            break;
          }
          case 794: {
            if (verify_ == null) {
              Verify = new global::NeoFS.API.Service.RequestVerificationHeader();
            }
            input.ReadMessage(Verify);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteResponse is empty
  /// </summary>
  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NeoFS.API.Accounting.WithdrawReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
